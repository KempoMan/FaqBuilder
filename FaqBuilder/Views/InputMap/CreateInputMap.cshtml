@model FaqBuilder.ViewModels.InputMapViewModel

@{
    ViewBag.Title = "CreateInputMap";
}

<h2>Create Input Map</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Input Map</h4>
        <hr />
        @Html.ValidationSummary(string.Empty, new {  @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Input, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Input, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Input, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConvertedInput, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConvertedInput, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConvertedInput, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @Html.HiddenFor(t => t.GameId)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Game", "GameDetails", "Game", new {id = Model.GameId }, null)
</div>
