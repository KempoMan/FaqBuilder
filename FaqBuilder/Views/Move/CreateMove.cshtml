@model FaqBuilder.ViewModels.MoveViewModel

@{
    ViewBag.Title = "Create Move";
}

<h2>Create Move</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Move</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MoveTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MoveTypeId, new SelectList(Model.MoveTypes, "Id", "Name", "Select an Item"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MoveTypeId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Motion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Motion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Motion, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(m => m.CharacterId)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" 
                   @{ 
                       if (!Model.MoveTypes.Any())
                       { 
                           @: disabled="disabled"
                       } 
                    } />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Character", "CharacterDetails", "Character", new { id = Model.CharacterId }, null)
</div>
